#include "system/SetupSystem.h"  // for CompleteSetupSystem
#include "message/Message.h"
#include "util/MiscUtilityFunctions.h"  // for PrintHexBytes()

using namespace muscle;

static void PrintExampleDescription()
{
   printf("\n");
   printf("In this program, we demonstrate how to iterate over the field names in a Message\n");
   printf("\n");
}

enum {
   COMMAND_CODE_ORDER_PIZZA = 1887074913, // 'pzza' (arbitrary value generated by muscle/test/calctypecode.cpp)
   COMMAND_CODE_DELIVERY_INFO
};

int main(int argc, char ** argv)
{
   CompleteSetupSystem css;

   PrintExampleDescription();

   // Let's create a Message and add some data to it
   Message orderPizzaMsg(COMMAND_CODE_ORDER_PIZZA);
   (void) orderPizzaMsg.AddInt32( "size_inches", 16);       // Error checking ommitted for clarity
   (void) orderPizzaMsg.AddBool(  "vegan",       false);    // feh!
   (void) orderPizzaMsg.AddString("toppings",    "cheese");
   (void) orderPizzaMsg.AddString("toppings",    "pepperoni");
   (void) orderPizzaMsg.AddString("toppings",    "mushrooms");
   (void) orderPizzaMsg.AddFloat( "price",       16.50f);   // in this scenario, the user gets to specify the price he wants to pay!?

   // Now let's add the user's delivery info -- we'll use a MessageRef to avoid an unnecessary data-copy in the AddMessage() call, below
   MessageRef deliveryInfoMsg = GetMessageFromPool(COMMAND_CODE_DELIVERY_INFO);
   (void) deliveryInfoMsg()->AddString("name",    "Hungry Joe");
   (void) deliveryInfoMsg()->AddString("address", "20 West Montecito Ave");
   (void) deliveryInfoMsg()->AddString("city",    "Sierra Madre");
   (void) deliveryInfoMsg()->AddString("state",   "California");
   (void) deliveryInfoMsg()->AddInt32("zip_code", 91024);
   (void) orderPizzaMsg.AddMessage("delivery_info", deliveryInfoMsg);

   // Let's review our order
   printf("Our pizza-order Message is:\n");
   orderPizzaMsg.PrintToStream();

   printf("\n");
   printf("The Field names present in (orderPizzaMsg) are:\n");
   for (MessageFieldNameIterator mfn(orderPizzaMsg); mfn.HasData(); mfn++)
   {
      const String & fn = mfn.GetFieldName();
      const uint32 fType = mfn.GetFieldType();

      printf("   Field [%s] is of type " UINT32_FORMAT_SPEC " (aka '%s') and contains " UINT32_FORMAT_SPEC " data-values.\n", fn(), mfn.GetFieldType(), GetTypeCodeString(fType)(), orderPizzaMsg.GetNumValuesInName(fn));
   }

   printf("\n");
   return 0;
}
